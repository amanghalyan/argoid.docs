version: "2"
x-redash-service: &redash-service
  image: redash/redash:{{ redash_docker_image_tag }}
  depends_on:
    - postgres
    - redis
  env_file: /opt/redash/env
  restart: always
services:
  server:
    <<: *redash-service
    command: server
    ports:
      - "5000:5000"
    environment:
      REDASH_WEB_WORKERS: 4
  scheduler:
    <<: *redash-service
    command: scheduler
    environment:
      QUEUES: "celery"
      WORKERS_COUNT: 1
  scheduled_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
  adhoc_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "queries"
      WORKERS_COUNT: 2
  redis:
    image: redis:{{ redash_redis_docker_image_tag }}
    restart: always
  postgres:
    image: postgres:{{ redash_postgres_docker_image_tag }}
    env_file: /opt/redash/env
    volumes:
      - /opt/redash/postgres-data:/var/lib/postgresql/data
      - /etc/letsencrypt/:/etc/letsencrypt/
    restart: always
  nginx:
    image: redash/nginx:latest
    ports:
      - "{{ redash_http_port }}:80"
   #   - "{{ nginx_port }}":443
    depends_on:
      - server
    links:
      - server:redash
   # volumes:
    #  - /opt/redash/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    #  - /etc/letsencrypt/:/etc/letsencrypt/
    #  - /opt/redash/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    #  - /opt/redash/nginx/certs:/etc/letsencrypt
    #  - /opt/redash/nginx/certs-data:/data/letsencrypt
    restart: always
